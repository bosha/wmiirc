#!/bin/bash
# ----------------------------------------------------------
# Wmii configuration file by bosha - http://the-bosha.ru
# For more information please visit cite above. 
# Also there you can find articles about wmii (In Russian)
# And my contact information
# If you find any bug, before contact me, please, check
# what you using wmii-3.9, or mercurial version.
#
# Enjoy ;3
# ----------------------------------------------------------

# Configure wmii
wmiiscript=wmiirc # For wmii.sh
. wmii.sh

# Configuration Variables
MODKEY=Mod4
UP=k
DOWN=j
LEFT=h
RIGHT=l

# Bars
noticetimeout=5
noticebar=/rbar/!notice

# Colors tuples: "<text> <background> <border>"
WMII_FOCUSCOLORS='#eeeeee #506070 #708090'
#WMII_BACKGROUND='#333333'
WMII_NORMCOLORS='#bbbbbb #222222 #000000' 
WMII_BARCOLORS='#ee9a00 #222222 #000000'

# Tag's array
TAGS=("0.zero" "1.www" "2.im" "3.term" "4.code" "5.p2p" "6.file" "7.song" "8.text" "9.misc")

# Set font
#WMII_FONT='xft:Terminus:style=Bold:size=10'
#WMII_FONT='xtf:Droid Sans:size=9'
#WMII_FONT='xft:Droid:size=8'
WMII_FONT='xft:Monospace:size=9:style=Regular'
set -- $(echo $WMII_NORMCOLORS $WMII_FOCUSCOLORS)
WMII_TERM="urxvt"
WMII_MENU='dmenu -b -fn "$WMII_FONT" -nf '"'$1' -nb '$2' -sf '$4' -sb '$5'"

# Menu history
hist="$(wmiir namespace)/history"
histnum=5000

wmiir write /colrules <<!
/gimp/ -> 17+83+41
/.*/ -> 50+50 # Golden Ratio
# Column Rules
!

# Tagging Rules
wmiir write /tagrules <<!
/Vlc/ -> ~
/SMPlayer/ -> ~
/Firefox/ -> 1.www
/Psi+/ -> 2.im
/Pidgin/ -> 2.im
/qutIM/ -> 2.im
/gmcabber/ -> 2.im
/Tkabber/ -> 2.im
/gweechat/ -> 4.irc
/osmo/ -> osmo
/Deluge/ -> 5.p2p
/pcmanfm/ -> ~
/Просмотр\ изображений/ -> ~
/Sonata/ -> 7.song
/gncmpcpp/ -> 7.song
/OpenOffice.org 3.1/ -> 8.text
/DjView/ -> 8.text
/Mozilla Thunderbird/ -> mail
/Thunderbird/ -> mail
/VirtualBox/ -> vb
/TuxGuitar/ -> tuxg
#/.*/ -> 9.misc
!

# Function to run app correctly
run_app() {
if ! ps -C $1>/dev/null; then
    $1 &
fi
} 

# List all used tags
used_tags() {
    ATAGS=`wmiir ls /tag | sed -e 's|/||; /^sel$/d'`

    for CTAG in $ATAGS
    do
        LTAGS="$LTAGS"+"$CTAG"
        continue
    done
    
    echo $LTAGS | cut -c 2-
}

# List all tags
read_tags() {
    wmiir ls /tag | sed -e 's|/||; /^sel$/d'
}

# Go to the next tag
next_tag() {
    CTAG=$(wmiir read /tag/sel/ctl | line)
    FTAG=$(read_tags | line)
    LTAG=$(read_tags | tail -n 1)
    if [ "$CTAG" = "$LTAG" ]; then
        echo -n $FTAG
    else
        read_tags | grep -A1 $CTAG | tail -n 1
    fi 
}
 
# Go to prev tag
prev_tag() {
    CTAG=$(wmiir read /tag/sel/ctl | line)
    FTAG=$(read_tags | line)
    LTAG=$(read_tags | tail -n 1)
    if [ "$CTAG" = "$FTAG" ]; then
        echo -n $LTAG
    else
        read_tags | grep -B1 $CTAG | line
    fi 
}

# Creating bar elements
# Don't rename bar names to other. If do that, then bar elements 
# will be created in chaotic sequence
# 1 - skb
# 2 - weather
# 3 - date
echo $WMII_BARCOLORS | wmiir create /rbar/1
echo $WMII_BARCOLORS | wmiir create /rbar/2
echo $WMII_BARCOLORS | wmiir create /rbar/3

# Load some information to bars
status () {
    echo -n $(/usr/bin/skb -1)          | wmiir write /rbar/1
    echo -n $(cat /tmp/.google_weather) | wmiir write /rbar/2
    echo -n $(date +'%a %d %b %H:%M')   | wmiir write /rbar/3
}

local_events() { 
    true;
}
wi_runconf -s wmiirc_local

echo $WMII_NORMCOLORS | wmiir create $noticebar

# Event processing
events() {
    sed 's/^    //' <<'!'
    # Events
    Event CreateTag
        echo "$WMII_NORMCOLORS" "$@" | wmiir create "/lbar/$@"
    Event DestroyTag
        wmiir remove "/lbar/$@"
    Event FocusTag
        wmiir xwrite "/lbar/$@" "$WMII_FOCUSCOLORS" "$@"
    Event UnfocusTag
        wmiir xwrite "/lbar/$@" "$WMII_NORMCOLORS" "$@"
    Event UrgentTag
        shift
        wmiir xwrite "/lbar/$@" "*$@"
    Event NotUrgentTag
        shift
        wmiir xwrite "/lbar/$@" "$@"
    Event LeftBarClick LeftBarDND
        shift
        #$LAUNCH "$@"
        wmiir xwrite /ctl view "$@"
    Event Unresponsive
        {
            client=$1; shift
            msg="The following client is not responding. What would you like to do?$wi_nl"
            resp=$(wihack -transient $client \
                      xmessage -nearmouse -buttons Kill,Wait -print \
                               "$msg $(wmiir read /client/sel/label)")
            if [ "$resp" = Kill ]; then
                wmiir xwrite /client/$client/ctl kill &
            fi
        }&
    Event Notice
        wmiir xwrite $noticebar $wi_arg

        kill $xpid 2>/dev/null # Let's hope this isn't reused...
        { sleep $noticetimeout; wmiir xwrite $noticebar ' '; }&
        xpid = $!
    Event ClientMouseDown
        case $2 in
             3) wmiir xwrite /client/$1/ctl kill &
            ;;
             2) wmiir xwrite /client/$1/ctl $(wmii9menu Close:kill Kill:slay Fullscreen:'Fullscreen on') &
            ;;
        esac
    Menu LBar-3-Delete
        tag=$1; clients=$(wmiir read "/tag/$tag/index" | awk '/[^#]/{print $2}')
        for c in $clients; do
            if [ "$tag" = "$(wmiir read /client/$c/tags)" ]; then
                wmiir xwrite /client/$c/ctl kill
            else
                wmiir xwrite /client/$c/tags -$tag
            fi
            if [ "$tag" = "$(wi_seltag)" ]; then
                newtag=$(wi_tags | awk -v't='$tag '
                    $1 == t { if(!l) getline l
                          print l
                          exit }
                    { l = $0 }')
                wmiir xwrite /ctl view $newtag
            fi
        done
    Event LeftBarMouseDown
        wi_fnmenu LBar "$@" &
    # Actions
    Action quit
        wmiir xwrite /ctl quit
    Action exec
        wmiir xwrite /ctl exec "$@"
    Action rehash
        proglist $PATH >$progsfile
    Action status
        set +xv
        while status | status; do
            sleep 1
        done
    # Key Bindings
    Key Menu
        eval apwal &
    Key $MODKEY-F7
        eval mpc toggle & 
    Key $MODKEY-F8
        eval mpc prev &
    Key $MODKEY-F9
        eval mpc next &
    Key $MODKEY-Control-t
        case $(wmiir read /keys | wc -l | tr -d ' \t\n') in
        0|1)
            echo -n "$Keys" | wmiir write /keys
            wmiir xwrite /ctl grabmod $MODKEY;;
        *)
            wmiir xwrite /keys $MODKEY-Control-t
            wmiir xwrite /ctl grabmod Mod3;;
        esac
    Key $MODKEY-space
        wmiir xwrite /tag/sel/ctl select toggle
    Key $MODKEY-d
        wmiir xwrite /tag/sel/ctl colmode sel default-max
    Key $MODKEY-s
        wmiir xwrite /tag/sel/ctl colmode sel stack-max
    Key $MODKEY-m
        wmiir xwrite /tag/sel/ctl colmode sel stack+max
    Key $MODKEY-a
        $TOGGLE USA
        action $(wi_actions | wimenu -h "${hist}.actions" -n $histnum) &
    Key $MODKEY-p
        $TOGGLE USA
        eval wmiir setsid "$(wimenu -h "${hist}.progs" -n $histnum <$progsfile)" &
    Key $MODKEY-t
        wmiir xwrite /ctl view $(wi_tags | wimenu -h "${hist}.tags" -n 50) &
    Key $MODKEY-Return
         eval urxvt &
    Key $MODKEY-Shift-space
        wmiir xwrite /tag/sel/ctl send sel toggle
    Key $MODKEY-f
        wmiir xwrite /client/sel/ctl Fullscreen toggle
    Key $MODKEY-Shift-c
        wmiir xwrite /client/sel/ctl kill
    Key $MODKEY-Shift-t
        wmiir xwrite "/client/$(wmiir read /client/sel/ctl)/tags" $(wi_tags | wimenu -h "${hist}.tags" -n 50) &
    Key $MODKEY-$LEFT
        wmiir xwrite /tag/sel/ctl select left
    Key $MODKEY-$RIGHT
        wmiir xwrite /tag/sel/ctl select right
    Key $MODKEY-$DOWN
        wmiir xwrite /tag/sel/ctl select down
    Key $MODKEY-$UP
        wmiir xwrite /tag/sel/ctl select up
    Key $MODKEY-Shift-$LEFT
        wmiir xwrite /tag/sel/ctl send sel left
    Key $MODKEY-Shift-$RIGHT
        wmiir xwrite /tag/sel/ctl send sel right
    Key $MODKEY-Shift-$DOWN
        wmiir xwrite /tag/sel/ctl send sel down
    Key $MODKEY-Shift-$UP
        wmiir xwrite /tag/sel/ctl send sel up
    Key $MODKEY-Control-$LEFT
                wmiir xwrite /tag/sel/ctl nudge sel sel left
    Key $MODKEY-Control-$RIGHT
                wmiir xwrite /tag/sel/ctl nudge sel sel right
    Key $MODKEY-Control-$UP
                wmiir xwrite /tag/sel/ctl nudge sel sel up
    Key $MODKEY-Control-$DOWN
                wmiir xwrite /tag/sel/ctl nudge sel sel down 
    Key $MODKEY-x
        wmiir xwrite /ctl view $(prev_tag)
    Key $MODKEY-c
        wmiir xwrite /ctl view $(next_tag)
    Key $MODKEY-Shift-q
        echo -n $(used_tags) | wmiir write /client/sel/tags

!
    for i in 0 1 2 3 4 5 6 7 8 9; do
    sed 's/^    //' <<!
    Key $MODKEY-$i # Select Tag
        wmiir xwrite /ctl view ${TAGS[$i]}
    Key $MODKEY-Shift-$i # Retag selected application
        wmiir xwrite /client/sel/tags ${TAGS[$i]} 
!
    done
}

wi_events <<!
$(events)
$(local_events)
!
unset events local_events


# WM Configuration
wmiir write /ctl <<!
    font $WMII_FONT
    focuscolors $WMII_FOCUSCOLORS
    normcolors $WMII_NORMCOLORS
    grabmod $MODKEY
    border 1
!

# Open the first tag
wmiir xwrite /ctl view "1.www" 

# Run apps if want
run_app firefox
# xxkb broken. I don't know why them won't work"
#run_app xxkb
run_app deluge
run_app osmo
run_app thunderbird
run_app tkabber

export WMII_FONT WMII_TERM
export WMII_FOCUSCOLORS WMII_SELCOLORS WMII_NORMCOLORS

# Misc
progsfile="$(wmiir namespace)/.proglist"
action status &
wi_proglist $PATH >$progsfile &

# Setup Tag Bar

# Placing bar to top.
wmiir xwrite /ctl bar on top

IFS="$wi_nl"
wmiir rm $(wmiir ls /lbar | sed 's,^,/lbar/,') >/dev/null
seltag=$(wmiir read /tag/sel/ctl | sed 1q)
unset IFS
wi_tags | while read tag
do
    if [ "$tag" = "$seltag" ]; then
        echo "$WMII_FOCUSCOLORS" "$tag"
    else
        echo "$WMII_NORMCOLORS" "$tag"
    fi | wmiir create "/lbar/$tag"
done

wi_eventloop
